# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  test:
    parameters:
      version:
        type: string
    docker:
      - image: cimg/python:<< parameters.version >>
    working_directory: '~/repo'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements.test.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.test.txt
            pip install -r requirements.txt
            sudo apt-get update -y
            sudo apt-get install -y imagemagick
            make models
      - save_cache:
          paths:
            - ./venv
            - ./ocrd-resources
          # ocrd-resources depends on the model files registered under core/ocrd-tool json
          # but let's assume these won't change without changing requirements.txt for now
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements.test.txt" }}
      - run:
          name: run unit tests
          command: . venv/bin/activate && make test
      - run:
          name: run CLI tests
          command: . venv/bin/activate && pip install . && make cli-test
      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      DOCKER_TAG: ocrd/anybaseocr
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - setup_remote_docker: # https://circleci.com/docs/2.0/building-docker-images/
          docker_layer_caching: true
      - run: make docker DOCKER_TAG=$DOCKER_TAG
      - run: docker run --rm $DOCKER_TAG ocrd-anybaseocr-crop -h
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login --username "$DOCKERHUB_USER" --password-stdin
      - run: docker push $DOCKER_TAG

workflows:
  version: 2
  test-all:
    jobs:
      - test:
          matrix:
            parameters:
              version: ['3.7', '3.8', '3.9', '3.10', '3.11']
      - deploy-docker:
          filters:
            branches:
              only: master
